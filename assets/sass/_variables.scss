@font-face {
  font-display: swap;
  font-family: 'Recoleta';
  font-weight: 400;
  src: url( 'fonts/recoleta/400.woff2' ) format( 'woff2' ),
    url( 'fonts/recoleta/400.woff' ) format( 'woff' );
}
@font-face {
  font-display: swap;
  font-family: 'Recoleta';
  font-weight: 500;
  src: url( 'fonts/recoleta/500.woff2' ) format( 'woff2' ),
    url( 'fonts/recoleta/500.woff' ) format( 'woff' );
}
@font-face {
  font-display: swap;
  font-family: 'Recoleta';
  font-weight: 600;
  src: url( 'fonts/recoleta/600.woff2' ) format( 'woff2' ),
    url( 'fonts/recoleta/600.woff' ) format( 'woff' );
}
@font-face {
  font-display: swap;
  font-family: 'Eckmannpsych';
  src: url('fonts/eckmannpsych/eckmannpsych-variable-webfont.woff2') format('woff2'),
      url('fonts/eckmannpsych/eckmannpsych-variable-webfont.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

$color_link: royalblue;
$color_link_visited: purple;
$color_link_hover: midnightblue;
$color_text_main: #404040;

$color-green: #035455;
$color-yellow: #b4a859;
$color-orange: #be6748;
$color-tan: #e7d8cc;
$color-gold: #B3A759;
$color-brown: #b16b4f;


$font1: 'Hind', sans-serif;
$font2: 'Cinzel', serif;
$font3: 'Aladin', cursive;
$font_heading1: 'Eckmannpsych', 'Hind Siliguri', sans-serif;

// $font1: 'Recoleta', serif;
// $font2: 'DM Sans', sans-serif;
// $font3: 'Rubik', sans-serif;
// $font4: 'Open Sans', sans-serif;
// $font5: 'EB Garamond', serif;

$font_code: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
$font_pre: "Courier 10 Pitch", Courier, monospace;

$xswidth: 480px;
$tabwidth: 767px;
$midwidth: 900px;
$deskwidth: 1200px;

@mixin xs { @media (min-width: $xswidth) { @content; } }
@mixin tab { @media (min-width: $tabwidth) { @content; } }
@mixin mid { @media (min-width: $midwidth) { @content; } }
@mixin desk {  @media (min-width: $deskwidth) { @content; } }

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
	clear: both;
	*zoom: 1;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}
@mixin flexbox(){
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
  }
  @mixin flexbox-flex($first, $second, $third) {
	-webkit-box-flex: $first $second $third;
	-moz-box-flex: $first $second $third;
	-webkit-flex: $first $second $third;
	-ms-flex: $first $second $third;
	flex: $first $second $third;
  }
  @mixin flexbox-wrap($value){
	-webkit-flex-wrap: $value;
	flex-wrap: $value;
  }
  @mixin flexbox-align-content($value){
	-webkit-align-content: $value;
	align-content: $value;
  }
  @mixin flexbox-align-items($value){
	-webkit-align-items: $value;
	align-items: $value;
  }
  @mixin flexbox-justify($value){
	-webkit-justify-content: $value;
	justify-content: $value;
  }
  @mixin flexbox-align-self($value){
	-webkit-align-self: $value;
	align-self: $value;
  }
  @mixin flexbox-direction($value){
	-webkit-flex-direction: $value;
	flex-direction: $value;
  }
  @mixin translatexy($value1,$value2){
	-ms-transform: translateX($value1) translateY($value2);
	-moz-transform: translateX($value1) translateY($value2);
	-webkit-transform: translateX($value1) translateY($value2);
	transform: translateX($value1) translateY($value2);
  }

@mixin flexgroup() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
}

@mixin flexgroup-center() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
	@include flexbox-align-items(center);
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

@mixin backgroundImage($position:center) {
  background-size: cover;
  background-position: $position;
  background-repeat: no-repeat;
}


@mixin animateThis($duration:1s) {
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animateEffect($effect:fadeIn) {
  -webkit-animation-name: $effect;
  animation-name: $effect;
}
